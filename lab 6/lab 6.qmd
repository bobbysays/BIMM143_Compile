---
title: "R Functions Lab Class 6"
author: "Nicholas"
format: pdf
---

# Writing Functions

Initiate sample student grades

```{r}
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

Create a grade() function.

```{r}
grade <- function(n, na.rm = TRUE) {
  n <- sort(n, decreasing = T, na.last = T) #sort the vector from greatest to least
  n <- n[-length(n)] #remove the last element
  n[is.na(n)] <- 0 #this will set any NA values to 0 before calculating mean
  mean(n, na.rm = na.rm) #calculate mean ignoring NA
}
```

testing stuff

```{r}
sort(student2)
sort(student2, decreasing = F, na.last = T)
```

## Different ways to do the same thing exist

Instead of sorting we can use which.min to find the index of the lowest value and go vector[-which.mean(vector)]to remove the element at that vector.

```{r}
grade_class <- function(df){
  df[is.na(df)] <- 0
  mean(df[-which.min(df)])
}
```

Import grade book

```{r}
url <- "https://tinyurl.com/gradeinput"
gradebook <- read.csv(url, row.names = 1)
head(gradebook)
```

> Q2 Who is the top scoring student?

```{r}
all_students <- apply(gradebook, 1, grade_class)
all_students[which.max(all_students)]
```

> Q3 What was the toughest homework?

```{r}
homeworks <- apply(gradebook, 2, grade)
homeworks[which.min(homeworks)]
#can also be done using sums
which.min(apply(gradebook, 2, sum, na.rm=TRUE))
```

> Q4 Which homework was most predictive of overall grade?

```{r}
#compare all student grades to homework grades to see which on is the least different
mask <- gradebook
mask[is.na(mask)] <- 0

cor(mask$hw5, all_students) #one column at a time
```

```{r}
#find the highest correlation out of all the homeworks
deviation <- apply(mask, 2, cor, y = all_students)
deviation
deviation[which.max(deviation)]
```
