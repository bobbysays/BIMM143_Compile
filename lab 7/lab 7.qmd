---
title: "lab 7"
author: "Nicholas Pacia"
format: pdf
---
# K-means Clustering

First we will test how this method works with made up data
```{r}
x <- rnorm(10000)
hist(x)
```

numbers centered around -3
```{r}
tmp <- c(rnorm(30, -3),
rnorm(30, +3))

x <- cbind(tmp,rev(tmp))
plot(x)
```

Now to see how `kmeans()` works with our sample data
```{r}
km <- kmeans(x, 2, nstart = 20)
km
```

```{r}
km$centers
```

>Q. How many points are in each cluster? 
Q. What 'component' of your result object details
  -cluster assignment/membership?
  -cluster center?
  
```{r}
km$size #returns number of points in the cluster
km$cluster #returns the vector of assigned elements to each cluster
km$centers #returns the value of the center of cluster
```

>Q. Plot x colored by kmeans cluster assignment and add cluster centers as blue points

```{r}
plot(x, col = km$cluster)
points(km$centers, col = "blue", pch = 15)
```

# Hierarchical Clustering

`hclust()` function in R performs hierarchical clustering. It requires an input distance matrix, which can be from `dist()` function.
```{r}
hc <- hclust(dist(x))
hc
```
Plotting hclust objects with `plot()`.
```{r}
plot(hc)
```
How to get cluster membership vector to cut the tree and yield seperate branches with the leaves on each branch being clusters. `cutree()` function
```{r}
cutree(hc, h=8)
```
```{r}
groups <- cutree(hc, k=2) #using cluster count
```
Plot data by hcluster groups.
```{r}
plot(x, col = groups)
```

# Principal Component Analysis PCA

Grabbing data
```{r}
url <- "https://tinyurl.com/UK-foods"
data <- read.csv(url)
```

Snippet of the data
>Q1. How many rows and columns are in your new data frame named x? What R functions could you use to answer this questions?

```{r}
dim(data) #gives rows and columns count
head(data)
```
Fix rownames. Can also be done when during `read.csv("name", row.names = 1)`
```{r}
rownames(data) <- data[,1]
data <- data[,-1]
head(data)
```

>Q2. Which approach to solving the ‘row-names problem’ mentioned above do you prefer and why? Is one approach more robust than another under certain circumstances?

I prefer setting rownames when reading the csv file because you can have a typo or run multiple times, which will delete columns of data by accident.

##Plotting
```{r}
barplot(as.matrix(data), beside=T, col=rainbow(nrow(data)))
```


>Q3: Changing what optional argument in the above barplot() function results in the following plot?

```{r}
barplot(as.matrix(data), col = rainbow(nrow(data)))
```

>Q5: Generating all pairwise plots may help somewhat. Can you make sense of the following code and resulting figure? What does it mean if a given point lies on the diagonal for a given plot?

The table of charts shows which country is x and y axis as well as the axis scale for each row and col on the outside. Points on the diagonal show that they are similar or the same in value. Anything off the diagonal shows that one country has more or less of that value.
```{r}
pairs(data, col=rainbow(10), pch=16)
```

>Q6. What is the main differences between N. Ireland and the other countries of the UK in terms of this data-set?

N. Ireland has several outliers off of the diagonal when compared to the other countries that the other countries of the UK don't have when compared to each other.

## PCA to the rescue

```{r}
pca <- prcomp(t(data))
summary(pca)
```
Table shows PC1 covers 67% of variation and PC2 covers 29%, but together they cover 97% of variation.

>Q7. Complete the code below to generate a plot of PC1 vs PC2. The second line adds text labels over the data points.

```{r}
plot(pca$x[,1], pca$x[,2], xlab = "PC1", ylab = "PC2", xlim = c(-270, 500))
text(pca$x[,1], pca$x[,2], colnames(data))
```
>Q8. Customize your plot so that the colors of the country names match the colors in our UK and Ireland map and table at start of this document.

```{r}
plot(pca$x[,1], pca$x[,2], xlab = "PC1", ylab = "PC2", xlim = c(-270, 500))
text(pca$x[,1], pca$x[,2], colnames(data), col = c("orange", "red", "blue", "darkgreen"))

```

>Q9: Generate a similar ‘loadings plot’ for PC2. What two food groups feature prominantely and what does PC2 maninly tell us about?

```{r}
par(mar=c(10, 3, 0.35, 0))
barplot( pca$rotation[,2], las=2 )
```
PC2 features fresh potatoes and soft drinks most predominantly. It shows a large difference between fresh potatoes and soft drinks, which captures the spread of the values (PC2) off of the best fit line (PC1)

# PCA of RNA-seq data

initialize data
```{r}
url2 <- "https://tinyurl.com/expression-CSV"
rna.data <- read.csv(url2, row.names=1)
head(rna.data)
```

>Q10: How many genes and samples are in this data set?

```{r}
dim(rna.data)
```
100 genes and 10 samples

Scatterplot of data
```{r}
## Again we have to take the transpose of our data 
pca <- prcomp(t(rna.data), scale=TRUE)
 
## Simple un polished plot of pc1 and pc2
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2")
```


```{r}
summary(pca)

```

Barplot of summary
```{r}
plot(pca, main="Quick scree plot")
```

Data to generate own scree plot
```{r}
## Variance captured per PC 
pca.var <- pca$sdev^2

## Percent variance is often more informative to look at 
pca.var.per <- round(pca.var/sum(pca.var)*100, 1)
pca.var.per
```

Generate scree-plot
```{r}
barplot(pca.var.per, main="Scree Plot", 
        names.arg = paste0("PC", 1:10),
        xlab="Principal Component", ylab="Percent Variation")
```

Pretty main PCA plot
```{r}
## A vector of colors for wt and ko samples
colvec <- colnames(rna.data)
colvec[grep("wt", colvec)] <- "red"
colvec[grep("ko", colvec)] <- "blue"

plot(pca$x[,1], pca$x[,2], col=colvec, pch=16,
     xlab=paste0("PC1 (", pca.var.per[1], "%)"),
     ylab=paste0("PC2 (", pca.var.per[2], "%)"))

text(pca$x[,1], pca$x[,2], labels = colnames(rna.data), pos=c(rep(4,5), rep(2,5)))
```

