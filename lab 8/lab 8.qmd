---
title: "Lab 8"
author: "Nicholas Pacia"
format: pdf
---
Gathering data
```{r}
fna.data <- "WisconsinCancer.csv"
wsd.df <- read.csv(fna.data, row.names = 1)
```
```{r}
#head(wsd.df)
```

```{r}
wsc.data <- wsd.df[,-1]
diagnosis <- as.factor(wsd.df[,1])
```

> For wsc.data and diagnosis:

>Q1. How many observations are in this dataset?

>Q2. How many of the observations have a malignant diagnosis?

>Q3. How many variables/features in the data are suffixed with _mean?

```{r}
nrow(wsc.data) #number of observations
sum(diagnosis=="M") #number of malignant diagnoses
length(grep("_mean", colnames(wsc.data))) #number of variables with the suffix _mean
```

# Starting PCA

```{r}
# Check column means and standard deviations
colMeans(wsc.data)
apply(wsc.data,2,sd)
```
Creating PCA
```{r}
wsc.pr <- prcomp(wsc.data, scale = T)
summary(wsc.pr)
```

>Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

PC1 captures 44.3% of original variance.

>Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

3 PCs are required for at least 70% cumulative proportion of variance

>Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

For 90%, 7 PCs are required to account for original variance.

Plot the PCA
```{r}
biplot(wsc.pr)
```
>Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

Nothing stands out because this plot is impossible to understand. All the labeled observations and variables overlap and become unreadable.


Prettier plot
```{r}
plot( wsc.pr$x, col = diagnosis , 
     xlab = "PC1", ylab = "PC2")
```
Same thing but for PC1 and PC3
```{r}
plot(wsc.pr$x[,c(1,3)], col = diagnosis, 
     xlab = "PC1", ylab = "PC3")
```
>Q8. What do you notice about these plots?

There is a clearer divide between benign and malignant cases in the PC2 vs PC1 plot compared to PC3 vs PC1. The PC3 vs PC1 plot has more malignant and benign cases overlapping over the same area, which would make it harder for that plot to be used to diagnose a patient. PC3 covers less variance than PC2.



Fancy ggplot
```{r}
library(ggplot2) #bring in ggplot package

df <- as.data.frame(wsc.pr$x)
df$diagnosis <- diagnosis


ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()

```

## Variance explained
Calculate variance of each component
```{r}
pr.var <- wsc.pr$sdev^2
head(pr.var)
```
```{r}
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```
```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```
>Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?
Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

```{r}
wsc.pr$rotation["concave.points_mean",1] #prints the component of rotation vector for concave.points_mean
y <- summary(wsc.pr)
attributes(y)
sum(y$importance[3,] <= 0.8)+1 #number of PCs required to cover more than 80% variation
```
## Clustering PCA

Figuring out how many PCS i need for at least 90%
```{r}
wsc.summary <- summary(wsc.pr)
attributes(wsc.summary)
sum(wsc.summary$importance[3,] <= 0.9) + 1
```
Forming clusters. `hclust()` requires a distance matrix input
```{r}
wisc.dist <- dist(wsc.pr$x[,1:7])
wisc.pr.hclust <- hclust(wisc.dist, method = "ward.D2")
plot(wisc.pr.hclust)
```
```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
table(diagnosis, grps)
```



Plot based off of these groups
```{r}
plot(wsc.pr$x[,1:2], col=grps)
```



## Hierarchical clustering
```{r}
data.scaled <- scale(wsc.data)
data.dist <- dist(data.scaled)
wisc.hclust <- hclust(data.dist)
```

>Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h = 19, col="red", lty=2) #height 19 for 4 clusters
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k =6)
table(wisc.hclust.clusters, diagnosis)
```


>Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

Separating into 6 clusters ends up with the best division of B and M so that most clusters have almost all M or mostly B with as little overlapping B and M in the same cluster. Adding more clusters will not improve the separation of clusters 1 and 3.

>Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

```{r}
wisc.hclust <- hclust(data.dist, method = "ward.D2")
plot(wisc.hclust)
```
I prefer ward.D2 method because it create 2 clear clusters to best represent the 2 diagnosis options. It is also organized the best to show 2 clear brackets for these clusters.


```{r}
grps <- cutree(wisc.pr.hclust, k=4)
table(grps)
table(diagnosis, grps)
```

>Q15. How well does the newly created model with four clusters separate out the two diagnoses?

This new model is worse because now there are ore clusters that have less diagnostic clarity since cluster 3 has more proportional B diagnoses than before when there were 2 clusters, so anything that falls into cluster 3 is more likely to be falsely classified.

>Q17. Which of your analysis procedures resulted in a clustering model with the best specificity? How about sensitivity?

The combining method with clustering from the PCA resulted in the best clustering model with the best specificity and sensitivity compared to the normal hierarchical cluster that we performed.

>Q18. Which of these new patients should we prioritize for follow up based on your results?

Patient 1 should